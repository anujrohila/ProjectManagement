//-------------------------------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by EntitiesToDTOs.v3.2 (entitiestodtos.codeplex.com).
//     Timestamp: 2015-03-05 - 14:09:29
//
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//-------------------------------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Text;
using System.Linq;
using ProjectManagement.Domain;
using ProjectManagement.DLL.ORM;

namespace ProjectManagement.DLL.ORM
{

    /// <summary>
    /// Assembler for <see cref="user"/> and <see cref="userDTO"/>.
    /// </summary>
    public static partial class userAssembler
    {
        /// <summary>
        /// Invoked when <see cref="ToDTO"/> operation is about to return.
        /// </summary>
        /// <param name="dto"><see cref="userDTO"/> converted from <see cref="user"/>.</param>
        static partial void OnDTO(this user entity, userDTO dto);

        /// <summary>
        /// Invoked when <see cref="ToEntity"/> operation is about to return.
        /// </summary>
        /// <param name="entity"><see cref="user"/> converted from <see cref="userDTO"/>.</param>
        static partial void OnEntity(this userDTO dto, user entity);

        /// <summary>
        /// Converts this instance of <see cref="userDTO"/> to an instance of <see cref="user"/>.
        /// </summary>
        /// <param name="dto"><see cref="userDTO"/> to convert.</param>
        public static user ToEntity(this userDTO dto)
        {
            if (dto == null) return null;

            var entity = new user();

            entity.Uids = dto.Uids;
            entity.Passwords = dto.Passwords;
            entity.Permit = dto.Permit;

            dto.OnEntity(entity);

            return entity;
        }

        /// <summary>
        /// Converts this instance of <see cref="user"/> to an instance of <see cref="userDTO"/>.
        /// </summary>
        /// <param name="entity"><see cref="user"/> to convert.</param>
        public static userDTO ToDTO(this user entity)
        {
            if (entity == null) return null;

            var dto = new userDTO();

            dto.Uids = entity.Uids;
            dto.Passwords = entity.Passwords;
            dto.Permit = entity.Permit;

            entity.OnDTO(dto);

            return dto;
        }

        /// <summary>
        /// Converts each instance of <see cref="userDTO"/> to an instance of <see cref="user"/>.
        /// </summary>
        /// <param name="dtos"></param>
        /// <returns></returns>
        public static List<user> ToEntities(this IEnumerable<userDTO> dtos)
        {
            if (dtos == null) return null;

            return dtos.Select(e => e.ToEntity()).ToList();
        }

        /// <summary>
        /// Converts each instance of <see cref="user"/> to an instance of <see cref="userDTO"/>.
        /// </summary>
        /// <param name="entities"></param>
        /// <returns></returns>
        public static List<userDTO> ToDTOs(this IEnumerable<user> entities)
        {
            if (entities == null) return null;

            return entities.Select(e => e.ToDTO()).ToList();
        }

    }
}
