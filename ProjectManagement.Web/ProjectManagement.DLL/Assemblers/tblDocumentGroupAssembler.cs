//-------------------------------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by EntitiesToDTOs.v3.2 (entitiestodtos.codeplex.com).
//     Timestamp: 2015-05-09 - 15:27:42
//
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//-------------------------------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Text;
using System.Linq;
using ProjectManagement.Domain;

namespace ProjectManagement.DLL.ORM
{
    /// <summary>
    /// Assembler for <see cref="tblDocumentGroup"/> and <see cref="tblDocumentGroupDTO"/>.
    /// </summary>
    public static partial class tblDocumentGroupAssembler
    {
        /// <summary>
        /// Invoked when <see cref="ToDTO"/> operation is about to return.
        /// </summary>
        /// <param name="dto"><see cref="tblDocumentGroupDTO"/> converted from <see cref="tblDocumentGroup"/>.</param>
        static partial void OnDTO(this tblDocumentGroup entity, tblDocumentGroupDTO dto);

        /// <summary>
        /// Invoked when <see cref="ToEntity"/> operation is about to return.
        /// </summary>
        /// <param name="entity"><see cref="tblDocumentGroup"/> converted from <see cref="tblDocumentGroupDTO"/>.</param>
        static partial void OnEntity(this tblDocumentGroupDTO dto, tblDocumentGroup entity);

        /// <summary>
        /// Converts this instance of <see cref="tblDocumentGroupDTO"/> to an instance of <see cref="tblDocumentGroup"/>.
        /// </summary>
        /// <param name="dto"><see cref="tblDocumentGroupDTO"/> to convert.</param>
        public static tblDocumentGroup ToEntity(this tblDocumentGroupDTO dto)
        {
            if (dto == null) return null;

            var entity = new tblDocumentGroup();

            entity.DocumentGroupId = dto.DocumentGroupId;
            entity.GroupName = dto.GroupName;

            dto.OnEntity(entity);

            return entity;
        }

        /// <summary>
        /// Converts this instance of <see cref="tblDocumentGroup"/> to an instance of <see cref="tblDocumentGroupDTO"/>.
        /// </summary>
        /// <param name="entity"><see cref="tblDocumentGroup"/> to convert.</param>
        public static tblDocumentGroupDTO ToDTO(this tblDocumentGroup entity)
        {
            if (entity == null) return null;

            var dto = new tblDocumentGroupDTO();

            dto.DocumentGroupId = entity.DocumentGroupId;
            dto.GroupName = entity.GroupName;

            entity.OnDTO(dto);

            return dto;
        }

        /// <summary>
        /// Converts each instance of <see cref="tblDocumentGroupDTO"/> to an instance of <see cref="tblDocumentGroup"/>.
        /// </summary>
        /// <param name="dtos"></param>
        /// <returns></returns>
        public static List<tblDocumentGroup> ToEntities(this IEnumerable<tblDocumentGroupDTO> dtos)
        {
            if (dtos == null) return null;

            return dtos.Select(e => e.ToEntity()).ToList();
        }

        /// <summary>
        /// Converts each instance of <see cref="tblDocumentGroup"/> to an instance of <see cref="tblDocumentGroupDTO"/>.
        /// </summary>
        /// <param name="entities"></param>
        /// <returns></returns>
        public static List<tblDocumentGroupDTO> ToDTOs(this IEnumerable<tblDocumentGroup> entities)
        {
            if (entities == null) return null;

            return entities.Select(e => e.ToDTO()).ToList();
        }

    }
}
