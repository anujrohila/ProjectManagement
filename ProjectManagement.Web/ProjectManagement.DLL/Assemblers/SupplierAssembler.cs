//-------------------------------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by EntitiesToDTOs.v3.2 (entitiestodtos.codeplex.com).
//     Timestamp: 2015-03-05 - 14:09:29
//
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//-------------------------------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Text;
using System.Linq;
using ProjectManagement.Domain;
using ProjectManagement.DLL.ORM;

namespace ProjectManagement.DLL
{

    /// <summary>
    /// Assembler for <see cref="Supplier"/> and <see cref="SupplierDTO"/>.
    /// </summary>
    public static partial class SupplierAssembler
    {
        /// <summary>
        /// Invoked when <see cref="ToDTO"/> operation is about to return.
        /// </summary>
        /// <param name="dto"><see cref="SupplierDTO"/> converted from <see cref="Supplier"/>.</param>
        static partial void OnDTO(this Supplier entity, SupplierDTO dto);

        /// <summary>
        /// Invoked when <see cref="ToEntity"/> operation is about to return.
        /// </summary>
        /// <param name="entity"><see cref="Supplier"/> converted from <see cref="SupplierDTO"/>.</param>
        static partial void OnEntity(this SupplierDTO dto, Supplier entity);

        /// <summary>
        /// Converts this instance of <see cref="SupplierDTO"/> to an instance of <see cref="Supplier"/>.
        /// </summary>
        /// <param name="dto"><see cref="SupplierDTO"/> to convert.</param>
        public static Supplier ToEntity(this SupplierDTO dto)
        {
            if (dto == null) return null;

            var entity = new Supplier();

            entity.Sup_id = dto.Sup_id;
            entity.NameiS = dto.NameiS;
            entity.AddiS = dto.AddiS;
            entity.City = dto.City;
            entity.OpBalance = dto.OpBalance;
            entity.Sup_Ph = dto.Sup_Ph;
            entity.creditday = dto.creditday;
            entity.creditammount = dto.creditammount;
            entity.GroupId = dto.GroupId;
            entity.GuIdSup = dto.GuIdSup;
            entity.share = dto.share;
            entity.CutDate = dto.CutDate;
            entity.Adding = dto.Adding;
            entity.IntRates = dto.IntRates;
            entity.AutoUpdate = dto.AutoUpdate;
            entity.alias = dto.alias;
            entity.userss = dto.userss;
            entity.childof = dto.childof;
            entity.Balance = dto.Balance;
            entity.CashBankBalance = dto.CashBankBalance;

            dto.OnEntity(entity);

            return entity;
        }

        /// <summary>
        /// Converts this instance of <see cref="Supplier"/> to an instance of <see cref="SupplierDTO"/>.
        /// </summary>
        /// <param name="entity"><see cref="Supplier"/> to convert.</param>
        public static SupplierDTO ToDTO(this Supplier entity)
        {
            if (entity == null) return null;

            var dto = new SupplierDTO();

            dto.Sup_id = entity.Sup_id;
            dto.NameiS = entity.NameiS;
            dto.AddiS = entity.AddiS;
            dto.City = entity.City;
            dto.OpBalance = entity.OpBalance;
            dto.Sup_Ph = entity.Sup_Ph;
            dto.creditday = entity.creditday;
            dto.creditammount = entity.creditammount;
            dto.GroupId = entity.GroupId;
            dto.GuIdSup = entity.GuIdSup;
            dto.share = entity.share;
            dto.CutDate = entity.CutDate;
            dto.Adding = entity.Adding;
            dto.IntRates = entity.IntRates;
            dto.AutoUpdate = entity.AutoUpdate;
            dto.alias = entity.alias;
            dto.userss = entity.userss;
            dto.childof = entity.childof;
            dto.Balance = entity.Balance;
            dto.CashBankBalance = entity.CashBankBalance;

            entity.OnDTO(dto);

            return dto;
        }

        /// <summary>
        /// Converts each instance of <see cref="SupplierDTO"/> to an instance of <see cref="Supplier"/>.
        /// </summary>
        /// <param name="dtos"></param>
        /// <returns></returns>
        public static List<Supplier> ToEntities(this IEnumerable<SupplierDTO> dtos)
        {
            if (dtos == null) return null;

            return dtos.Select(e => e.ToEntity()).ToList();
        }

        /// <summary>
        /// Converts each instance of <see cref="Supplier"/> to an instance of <see cref="SupplierDTO"/>.
        /// </summary>
        /// <param name="entities"></param>
        /// <returns></returns>
        public static List<SupplierDTO> ToDTOs(this IEnumerable<Supplier> entities)
        {
            if (entities == null) return null;

            return entities.Select(e => e.ToDTO()).ToList();
        }

    }
}
